{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sam\\\\New folder\\\\camunda-react\\\\src\\\\containers\\\\StartProcessPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport GenericForm from '../components/GenericForm';\nimport { loadProcessDefinitions, loadFormKey } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet AppRef = \"A\";\nconst num = () => {\n  const randomnum = Math.floor(Math.random() * 1000000) + 1;\n  return randomnum;\n};\nclass StartProcessPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentWillMount() {\n    this.props.loadFormKey(this.props.process);\n    AppRef = AppRef + num();\n  }\n  render() {\n    const {\n      process,\n      formKey,\n      processInstanceStarted,\n      values\n    } = this.props;\n    if (!formKey && !processInstanceStarted) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Process Start Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    } else if (processInstanceStarted) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Your Application Submitted.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }, this), \"Application Id:\", values.businessKey]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    } else {\n      const key = formKey['undefined'].key;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(GenericForm, {\n          formKey: key,\n          processDefinitionKey: process\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  const params = ownProps.match.params;\n  return {\n    ...params,\n    ...state.entities\n  };\n};\nexport default withRouter(connect(mapStateToProps, {\n  loadProcessDefinitions,\n  loadFormKey\n})(StartProcessPage));","map":{"version":3,"names":["React","Component","connect","withRouter","GenericForm","loadProcessDefinitions","loadFormKey","jsxDEV","_jsxDEV","AppRef","num","randomnum","Math","floor","random","StartProcessPage","constructor","props","componentWillMount","process","render","formKey","processInstanceStarted","values","children","fileName","_jsxFileName","lineNumber","columnNumber","businessKey","key","processDefinitionKey","mapStateToProps","state","ownProps","params","match","entities"],"sources":["C:/Users/sam/New folder/camunda-react/src/containers/StartProcessPage.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\nimport GenericForm from '../components/GenericForm'\r\nimport { loadProcessDefinitions, loadFormKey } from '../actions'\r\n\r\nlet AppRef=\"A\"\r\n\r\nconst num=()=>{Â  \r\n  const randomnum=Math.floor(Math.random() * 1000000) + 1;\r\n  return randomnum\r\n}\r\n\r\nclass StartProcessPage extends Component {\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  componentWillMount() {\r\n    this.props.loadFormKey(this.props.process);\r\n    AppRef=AppRef+num()\r\n  }\r\n\r\n  render() {\r\n    const { process, formKey, processInstanceStarted,values } = this.props\r\n\r\n    if (!formKey && !processInstanceStarted) {\r\n      return (\r\n        <div>Loading Process Start Form</div>\r\n      )\r\n    } else if (processInstanceStarted) {\r\n      return (\r\n        <div>Your Application Submitted.<br/>Application Id:{values.businessKey}</div>\r\n      )\r\n    } else {\r\n      const key = formKey['undefined'].key\r\n      return (\r\n        <div>\r\n          <GenericForm formKey={key} processDefinitionKey={process} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const params = ownProps.match.params\r\n  return {\r\n    ...params,\r\n    ...state.entities\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n  loadProcessDefinitions,\r\n  loadFormKey\r\n})(StartProcessPage))\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,sBAAsB,EAAEC,WAAW,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,IAAIC,MAAM,GAAC,GAAG;AAEd,MAAMC,GAAG,GAACA,CAAA,KAAI;EACZ,MAAMC,SAAS,GAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;EACvD,OAAOH,SAAS;AAClB,CAAC;AAED,MAAMI,gBAAgB,SAASd,SAAS,CAAC;EACvCe,WAAWA,CAACC,KAAK,EAAC;IAChB,KAAK,CAACA,KAAK,CAAC;EACd;EACAC,kBAAkBA,CAAA,EAAG;IACnB,IAAI,CAACD,KAAK,CAACX,WAAW,CAAC,IAAI,CAACW,KAAK,CAACE,OAAO,CAAC;IAC1CV,MAAM,GAACA,MAAM,GAACC,GAAG,EAAE;EACrB;EAEAU,MAAMA,CAAA,EAAG;IACP,MAAM;MAAED,OAAO;MAAEE,OAAO;MAAEC,sBAAsB;MAACC;IAAO,CAAC,GAAG,IAAI,CAACN,KAAK;IAEtE,IAAI,CAACI,OAAO,IAAI,CAACC,sBAAsB,EAAE;MACvC,oBACEd,OAAA;QAAAgB,QAAA,EAAK;MAA0B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAEzC,CAAC,MAAM,IAAIN,sBAAsB,EAAE;MACjC,oBACEd,OAAA;QAAAgB,QAAA,GAAK,6BAA2B,eAAAhB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,mBAAe,EAACL,MAAM,CAACM,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAElF,CAAC,MAAM;MACL,MAAME,GAAG,GAAGT,OAAO,CAAC,WAAW,CAAC,CAACS,GAAG;MACpC,oBACEtB,OAAA;QAAAgB,QAAA,eACEhB,OAAA,CAACJ,WAAW;UAACiB,OAAO,EAAES,GAAI;UAACC,oBAAoB,EAAEZ;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACxD;IAEV;EACF;AAEF;AACA,MAAMI,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,MAAMC,MAAM,GAAGD,QAAQ,CAACE,KAAK,CAACD,MAAM;EACpC,OAAO;IACL,GAAGA,MAAM;IACT,GAAGF,KAAK,CAACI;EACX,CAAC;AACH,CAAC;AAED,eAAelC,UAAU,CAACD,OAAO,CAAC8B,eAAe,EAAE;EACjD3B,sBAAsB;EACtBC;AACF,CAAC,CAAC,CAACS,gBAAgB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}